image: buildstream/testsuite-fedora:28-master-123-7ce6581b


cache:
  paths:
    - cache/

stages:
  - prepare
  - test
  - coverage
  - docs

before_script:
  # Diagnostics
  - mount
  - df -h

  # Hackily install buildstream
  - git clone https://gitlab.com/buildstream/buildstream.git
  - cd buildstream && pip3 install . && cd ..

  # Install extra docker dependency
  - pip3 install requests

  - adduser -m buildstream
  - chown -R buildstream:buildstream .

#####################################################
#                  Prepare stage                    #
#####################################################

# Create a source distribution
#
source_dist:
  stage: prepare
  script:

  # Generate the source distribution tarball
  #
  - python3 setup.py sdist
  - tar -ztf dist/*
  - tarball=$(cd dist && echo $(ls *))

  # Create an installer script
  - |
    cat > dist/install.sh << EOF
    #!/bin/sh
    tar -zxf ${tarball}
    cd ${tarball%.tar.gz}
    pip3 install --no-index .
    EOF

  # unpack tarball as `dist/bst-plugins-container` directory
  - |
    cat > dist/unpack.sh << EOF
    #!/bin/sh
    tar -zxf ${tarball}
    mv ${tarball%.tar.gz} bst-plugins-container
    EOF

  # Make our helpers executable
  - chmod +x dist/install.sh
  - chmod +x dist/unpack.sh
  artifacts:
    paths:
    - dist/

#####################################################
#                    Test stage                     #
#####################################################

tests:
  stage: test
  variables:
    PYTEST_ADDOPTS: "--color=yes"
  script:

    # Unpack and get into dist/bst-plugins-container
    - cd dist && ./unpack.sh
    - chown -R buildstream:buildstream bst-plugins-container
    - cd bst-plugins-container

    # Run the tests from the source distribution.
    # We run as a simple user to test for permission issues.
    - su buildstream -c 'python3 setup.py test --index-url invalid://uri'

    # Go back top level and collect our reports
    - cd ../.. #you may only have to go back one level here...
    - mkdir -p coverage-linux/
    - cp dist/bst-plugins-container/.coverage.* coverage-linux/coverage.linux
  artifacts:
    paths:
    - coverage-linux/
  dependencies:
  - source_dist

#####################################################
#                Coverage stage                     #
#####################################################

# Collate coverage reports
#
coverage:
  stage: coverage
  coverage: '/TOTAL +\d+ +\d+ +(\d+\.\d+)%/'
  script:
    - cd dist && ./unpack.sh && cd bst-plugins-container
    - pip3 install --no-index .
    - mkdir report
    - cd report
    - cp ../../../coverage-linux/coverage.linux .
    - coverage combine --rcfile=../.coveragerc -a coverage.*
    - coverage report --rcfile=../.coveragerc -m
  dependencies:
  - source_dist
  - tests

# Automatically build documentation, only for merges which land
# on master branch.
#
# Note: We still do not enforce a consistent installation of python2
#       or sphinx, as python2 will significantly grow the backing image.
#

#####################################################
#                  Docs stage                       #
#####################################################

pages:
  stage: docs
  script:
  - dnf install -y python2
  - pip3 install sphinx
  - pip3 install sphinx-click
  - pip3 install sphinx_rtd_theme
  - pip3 install --user .
  - make -C doc
  - mv doc/build/html public
  artifacts:
    paths:
    - public/
  only:
  - master
